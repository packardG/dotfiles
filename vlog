#!/bin/bash

usage ()
{
echo "\
This script is used to make opening and viewing the vertica log a lot easier.

Usage: $0 -d jarjarBinks

Mandatory args:
-d|--db     Specify the database name you would like to view the vertica log from.

Optional args:
-t|--tail   Tail the log instead of opening in vim.

Help:
-h|--help   Show this usage info.

Examples:
$0 -d jarjarBinks

$0 -d jarjarBinks -t
"
}

main()
{

    parse_args "$@"

    is_nimbus=`grep -A5 "$DB" /opt/vertica/config/admintools.conf | grep 'is_eon_mode' | awk '{printf $3}'`

    if [ "$tail" == "true" ]; then
        tail_log
    else
        open_log
    fi

}

tail_log()
{
    if [ "$is_nimbus" == True ]; then
        if is_compat; then 
            tail -f /vertica/data/"$DB"/node0*_catalog/vertica.log
        else
            tail -f /vertica/data/"$DB"/v_"${DB,,}"_node000*_catalog/vertica.log
        fi
    else
        if is_compat; then
            tail -f /scratch_b/qa/"$DB"/node0*_catalog/vertica.log
        else
            tail -f /scratch_b/qa/"$DB"/v_"${DB,,}"_node000*_catalog/vertica.log
        fi
    fi
}

open_log()
{
    if [ "$is_nimbus" == True ]; then
        if is_compat; then
            vim -u ~/.vimrc_gpackard /vertica/data/"$DB"/node0*_catalog/vertica.log
        else
            vim -u ~/.vimrc_gpackard /vertica/data/"$DB"/v_"${DB,,}"_node000*_catalog/vertica.log
        fi
    else
        if is_compat; then
            vim -u ~/.vimrc_gpackard /scratch_b/qa/"$DB"/node0*_catalog/vertica.log
        else
            vim -u ~/.vimrc_gpackard /scratch_b/qa/"$DB"/v_"${DB,,}"_node000*_catalog/vertica.log
        fi
    fi
}

is_compat()
{
    if [ "$is_nimbus" == True ]; then
        if [ -d /vertica/data/"$DB"/node0*_catalog ]; then
            return 0
        else
            return 1
        fi
    else
        if [ -d /scratch_b/qa/"$DB"/node0*_catalog ]; then
            return 0
        else
            return 1
        fi
    fi
}

parse_args()
{

    TEMP=`getopt -o d:th --long db:,tail,help -n 'vlog' -- "$@"`
    if [ "$?" != 0 ];then usage; exit 1; fi
    eval set -- "$TEMP"

    while true ; do
        case "$1" in
            -d|--db)    DB=$2; shift 2 ;;
            -t|--tail)  tail=true; shift 1 ;;
            -h|--help)  usage; exit 0;;
            -\?)        usage; exit 0;;
            --)         shift; break;;
            *)          usage; exit 1;;
        esac
    done

    if [ "x${DB}" = "x" ]; then usage; exit 1; fi
}

main "$@"
